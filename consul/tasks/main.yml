---
### Get the IP of the host that is running the ansible role
- name: Set variable to default IPv4 address of current host
  set_fact:
    current_host_ip: "{{ ansible_default_ipv4.address }}" # Created automatically by Ansible

### Install required system packages and Docker
- name: Install required system packages
  package:
    name: "{{ install_packages }}"
    state: present
  become: yes
  tags:
    - install_packages

- name: Install docker and docker compose
  include_tasks: docker.yml


### Python dependencies
- name: Install netaddr dependency on controlling host (with --user)
  pip:
    name: netaddr
    extra_args: --user
  become: false

- name: Install netaddr dependency on controlling host (virtualenv)
  pip:
    name: netaddr
  become: false

### Install consul in the target system 
- name: Install consul in the target system
  import_tasks: install_latest_consul.yml
  when: consul_latest_bug ==  false

- name: Install Consul specific version
  import_tasks: install_specific_version_consul.yml
  when: consul_latest_bug == true


### Create Consul specific paths
- name: Create Consul paths
  file:
    path: "{{ consul_configd_path }}"
    state: directory
    mode: 0755 
    owner: root
    group: root
    recurse: yes
  

### Create Consul certs and encryption key when it is the boostrap node
- name: Consul certs creation 
  import_tasks: create_consul_certs.yml
  when: bootstrap_server == true


### Scp the certificates from bootstrap node to actual privisioning node
- name: Consul certs and encryption key scp
  import_tasks: scp_consul_certs.yml
  when: bootstrap_server == false


### Create consul config files (consul, server, service)
# Consul generic config
- name: Create consul.hcl with encryption key
  vars:
    encrypt: "{{encryption_key}}"
  tasks:
   - name: Create consul.cl
     template:
      src: consulhcl.j2
      dest: "{{ consul_configd_path }}/consul.hcl"
      mode: 0644
      owner: root
      group: root
  become: yes


# Consul service agent config
- name: Create server.hcl
  file: 
    path: "{{ consul_configd_path }}/server.hcl"
    state: touch
    mode: 0644
    owner: root
    group: root
    template:
      src: serverhcl.j2
      dest: "{{ consul_configd_path }}/server.hcl"


# Consul service declaration and config  
- name: Create Consul service
  file: 
    path: "{{ consul_service_path }}/consul.service"
    state: touch
    mode: 0644
    owner: root
    group: root
    template:
      src: consulservice.j2
      dest: "{{ consul_service_path }}/consul.service"

    # Configure ACL's according to what the main server created
    # - name: Fetch a file form remote host
    #fetch: 
    #src:
    #dest: 
    #flat: yes

### Enable and start consul service

### Set ACL's
#- name: Set Consul ACL's
# import_tasks: acl.yml
